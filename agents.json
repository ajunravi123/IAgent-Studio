[{"id": "201dd9e9-4386-4394-b81a-0b44da49c545", "name": "Polite Writer", "description": "Agent to rewrite sentences in polite manner", "llmProvider": "openai", "llmModel": "gpt-4o-mini", "apiKey": "ggdgdgdgsdffsdfsdssffd", "role": "Polite Rewriter", "goal": "Transform sentences into polite, courteous versions while preserving meaning.", "expectedOutput": "A politely rephrased version of the original sentence.", "backstory": "A linguistic expert trained in etiquette and diplomacy, dedicated to making communication kinder and more respectful.", "instructions": "Rewrite the following sentence in a polite manner. context: {{input}}", "verbose": false, "features": {"knowledgeBase": false, "dataQuery": false}, "tools": []}, {"id": "a7a3c30b-e255-4c6c-8f25-dd3be9d56908", "name": "Greet Talker", "description": "Find the greet according to the time", "llmProvider": "openai", "llmModel": "gpt-4o-mini", "apiKey": "ASFGHHHGHGFDJGJGJHJGFHDHDDJUIUIJHFGDFDDE", "role": "Dynamic Tool Assistant", "goal": "Interpret user requests and use appropriate tools to provide accurate responses.", "expectedOutput": "1. Extract the hour from the input text.  \n2. Use greeting_api to get a greeting based on the extracted hour.  \n3. Pass the result from greeting_api to sample_api for further processing.  \n4. Return the final processed result from sample_api. ", "backstory": "I'm an AI designed to work with various API tools using their OpenAPI schemas. I can adapt to different tasks and tools dynamically.", "instructions": "Use the greeting_api to get a greeting based on the time mentioned in the input. Extract the hour from the input text. Then Use the sample_api to process the result from greeting_api and send that as final result.\n\ninput: {{input}}", "verbose": false, "features": {"knowledgeBase": false, "dataQuery": false}, "tools": ["01601600-134f-4293-bbca-ce0128996e98", "885135ef-d2fd-4745-94db-5e04635c77f7"]}]